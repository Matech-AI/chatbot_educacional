services:
  rag-server:
    build:
      context: ./backend
      dockerfile: Dockerfile.rag
    ports:
      - "8001:8001"
    environment:
      - CORS_ORIGINS=https://iadnadaforca.com.br,https://www.iadnadaforca.com.br,http://localhost:3000,http://127.0.0.1:3000
      - PORT=8001
      - HOST=0.0.0.0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_DRIVE_API_KEY=${GOOGLE_DRIVE_API_KEY}
      - NVIDIA_API_KEY=${NVIDIA_API_KEY}
    volumes:
      - ./backend/data:/app/data
    networks:
      - network_swarm_public
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=network_swarm_public"
      - "traefik.http.routers.rag.rule=Host(`iadnadaforca.com.br`) && PathPrefix(`/rag`)"
      - "traefik.http.routers.rag.entrypoints=http,https"
      - "traefik.http.services.rag.loadbalancer.server.port=8001"
      - "traefik.http.routers.rag.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.rag-stripprefix.stripprefix.prefixes=/rag"
      - "traefik.http.routers.rag.middlewares=rag-stripprefix"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  api-server:
    build:
      context: ./backend
      dockerfile: Dockerfile.api
    ports:
      - "8002:8002"
    environment:
      - LOG_LEVEL=INFO
      - PORT=8002
      - HOST=0.0.0.0
      - CORS_ORIGINS=https://iadnadaforca.com.br,https://www.iadnadaforca.com.br,http://localhost:3000,http://127.0.0.1:3000
      - RAG_SERVER_URL=http://rag-server:8001
    volumes:
      - ./backend/data:/app/data
    networks:
      - network_swarm_public
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=network_swarm_public"
      - "traefik.http.routers.api.rule=Host(`iadnadaforca.com.br`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=http,https"
      - "traefik.http.services.api.loadbalancer.server.port=8002"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=dna_da_forca
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - network_swarm_public
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - network_swarm_public
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=https://iadnadaforca.com.br/api
      - VITE_RAG_API_BASE_URL=https://iadnadaforca.com.br/rag
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=network_swarm_public"
      - "traefik.http.routers.frontend.rule=Host(`iadnadaforca.com.br`)"
      - "traefik.http.routers.frontend.entrypoints=http,https"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
    networks:
      - network_swarm_public

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  network_swarm_public:
    driver: bridge
